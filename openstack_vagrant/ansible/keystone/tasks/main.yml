---
- name: Install Python-MySQL
  apt: 
    name=python-mysqldb 
    state=present

- name: Install keystone
  apt: 
    name=keystone 
    state=present

- name: Add keystone database
  mysql_db: 
    name=keystone 
    state=present

- name: Add keystone database user
  mysql_user: 
    name=keystone 
    password={{ keystone_db_pass }} 
    priv=keystone.*:ALL,GRANT 
    host='%' 
    state=present

#Set up keystone config file

- name: Set up keystone.conf
  template:
    src=keystone.conf
    dest=/etc/keystone/keystone.conf
    owner=keystone
    group=keystone
    mode=0644

- name: Restart keystone
  service:
    name=keystone
    state=restarted

#Sync keystone db

- name: Sync keystone database
  command: su -s /bin/sh -c "keystone-manage db_sync" keystone

#Basic tenant and user creation

- name: Create admin tenant
  shell: OS_SERVICE_TOKEN={{ admin_token }} OS_SERVICE_ENDPOINT=http://127.0.0.1:35357/v2.0 /usr/bin/keystone \
           tenant-create --name admin --description "Admin Tenant" && touch /var/log/keystone/admin_tenant_create
    creates=/var/log/keystone/admin_tenant_create

- name: Create admin user
  shell: OS_SERVICE_TOKEN={{ admin_token }} OS_SERVICE_ENDPOINT=http://127.0.0.1:35357/v2.0 /usr/bin/keystone \
           user-create --name admin --pass "{{ admin_pass }}" && touch /var/log/keystone/admin_user_create
    creates=/var/log/keystone/admin_user_create

- name: Create admin role
  shell: OS_SERVICE_TOKEN={{ admin_token }} OS_SERVICE_ENDPOINT=http://127.0.0.1:35357/v2.0 /usr/bin/keystone \
           role-create --name admin && touch /var/log/keystone/admin_role_create
    creates=/var/log/keystone/admin_role_create

- name: Assign admin role to admin user
  shell: OS_SERVICE_TOKEN={{ admin_token }} OS_SERVICE_ENDPOINT=http://127.0.0.1:35357/v2.0 /usr/bin/keystone \
           user-role-add --user admin --tenant admin --role admin && touch /var/log/keystone/admin_role_assign
    creates=/var/log/keystone/admin_role_assign

- name: Create service tenant
  shell: OS_SERVICE_TOKEN={{ admin_token }} OS_SERVICE_ENDPOINT=http://127.0.0.1:35357/v2.0 /usr/bin/keystone \
           tenant-create --name service --description "Service Tenant" && touch /var/log/keystone/service_tenant_create
    creates=/var/log/keystone/service_tenant_create

- name: Create keystone service
  shell: OS_SERVICE_TOKEN={{ admin_token }} OS_SERVICE_ENDPOINT=http://127.0.0.1:35357/v2.0 /usr/bin/keystone \
           service-create --name keystone --type identity --description "Keystone"  && touch /var/log/keystone/keystone_service_create
    creates=/var/log/keystone/keystone_service_create

- name: Create keystone endpoint
  shell: OS_SERVICE_TOKEN={{ admin_token }} OS_SERVICE_ENDPOINT=http://127.0.0.1:35357/v2.0 /usr/bin/keystone \
           endpoint-create \
           --service-id $(OS_SERVICE_TOKEN={{ admin_token }} OS_SERVICE_ENDPOINT=http://127.0.0.1:35357/v2.0 keystone service-list | awk '/ identity / {print $2}') \
           --publicurl http://{{ public_ip }}:5000/v2.0 \
           --internalurl http://{{ ansible_all_ipv4_addresses[0] }}:5000/v2.0 \
           --adminurl http://{{ ansible_all_ipv4_addresses[0] }}:35357/v2.0 \
           --region {{ region }} && touch /var/log/keystone/keystone_endpoint_create
    creates=/var/log/keystone/keystone_endpoint_create

- name: Register service tenant ID
  shell: OS_SERVICE_TOKEN={{ admin_token }} OS_SERVICE_ENDPOINT=http://127.0.0.1:35357/v2.0 /usr/bin/keystone \
           tenant-list | grep  service | awk '{ print $2 }' | xargs echo -n
  register: service_tenant_id

- name: Create admin openrc file
  template: 
    src=openrc
    dest=/root/openrc
    owner=root
    group=root
    mode=0744
